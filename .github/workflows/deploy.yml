name: Build and Deploy

on:
  push:
    branches: [main, master]
  workflow_dispatch: # Allow manual triggering

jobs:
  build-and-deploy:
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Checkout infrastructure repository
        uses: actions/checkout@v3

      - name: Checkout source code repository
        uses: actions/checkout@v3
        with:
          repository: haebin-lee/spa-source
          path: spa-source
          token: ${{ secrets.GH_PAT }}

      - name: Debug AWS credentials
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
          AWS_DEFAULT_REGION: us-west-2
        run: |
          echo "Testing AWS credentials with session token..."
          aws sts get-caller-identity

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-west-2

      # - name: Login to Amazon ECR
      #   id: login-ecr
      #   uses: aws-actions/amazon-ecr-login@v2

      # - name: Build, tag, and push frontend image to Amazon ECR
      #   env:
      #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      #     ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
      #     IMAGE_TAG: frontend
      #   run: |
      #     cd spa-source
      #     docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./frontend
      #     docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      # - name: Build, tag, and push backend image to Amazon ECR
      #   env:
      #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      #     ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
      #     IMAGE_TAG: backend
      #   run: |
      #     cd spa-source
      #     docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./backend
      #     docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Deploy to EC2
        run: |
          # Set up SSH key
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/spa-key
          chmod 600 ~/.ssh/spa-key

          # Add EC2 host to known hosts
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

          # Run the deployment script on EC2
          ssh -i ~/.ssh/spa-key -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_HOST }} './deploy.sh'
